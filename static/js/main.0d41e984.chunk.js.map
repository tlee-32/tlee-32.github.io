{"version":3,"sources":["logo.svg","Title.js","ChatInput.js","ChatBox.js","App.js","reportWebVitals.js","index.js"],"names":["Title","ChatInput","props","useState","text","setText","onChange","event","message","target","value","onClick","sendMessage","ChatBox","messages","map","App","setMessages","newMsg","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qNAAe,I,MCIAA,MAJf,WACI,OAAO,mDCoBIC,MAnBf,SAAmBC,GAAQ,IAAD,EACEC,mBAAS,IADX,mBACfC,EADe,KACTC,EADS,KAYtB,OACI,gCACI,uBAAOC,SAXY,SAACC,GACxB,IAAMC,EAAUD,EAAME,OAAOC,MAC7BL,EAAQG,MAUJ,wBAAQG,QAPhB,WACIT,EAAMU,YAAYR,IAMd,sBCPGS,MAVf,SAAkBX,GACd,OACI,8BACKA,EAAMY,SAASC,KAAI,SAACP,GACjB,OAAO,8BAAMA,UCmBdQ,MAhBf,WAAgB,IAAD,EACmBb,mBAAS,CAAC,kBAD7B,mBACNW,EADM,KACIG,EADJ,KAOb,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAWL,YAPK,SAACM,GACnBD,EAAY,GAAD,mBAAKH,GAAL,CAAeI,QAOxB,cAAC,EAAD,CAASJ,SAAUA,QCNVK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0d41e984.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","function Title() {\n    return <h1>Chat Application</h1>\n}\n\nexport default Title;","import {  useState } from \"react\";\n\nfunction ChatInput(props) {\n    const [text, setText] = useState(\"\");\n\n    const updateMessageValue = (event) => {\n        const message = event.target.value;\n        setText(message);\n    }\n\n    function onClick() {\n        props.sendMessage(text)\n    }\n\n    return (\n        <div>\n            <input onChange={updateMessageValue} />\n            <button onClick={onClick}>Send</button>\n        </div>\n    );\n}\nexport default ChatInput;","function ChatBox (props) {\n    return (\n        <div>\n            {props.messages.map((message) => {\n                return <div>{message}</div>;\n            })}   \n        </div>\n    );\n}\n\nexport default ChatBox;","import { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Title from \"./Title\";\nimport ChatInput from \"./ChatInput\";\nimport ChatBox from \"./ChatBox\";\n\nfunction App() {\n  const [messages, setMessages] = useState([\"Hello Patrick\"]); \n\n  const sendMessage = (newMsg) => {\n    setMessages([...messages, newMsg])\n};\n\n  return (\n    <div>\n      <Title />\n      <ChatInput sendMessage={sendMessage} />\n      <ChatBox messages={messages}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}